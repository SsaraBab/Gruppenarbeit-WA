metrisch(x)
?tally
?xchisq.test
??tally
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
Ergebnis <- h
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
median(x)
Ergebnis <- dataframe(h, t)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
median(x)
Ergebnis <- data.frame(h, t)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
l <- median(x)
Ergebnis <- data.frame(h, l)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
l <- median(t)
Ergebnis <- data.frame(h, l)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
l <- median(t)
Ergebnis <- data.frame(h, l)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,9,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
l <- mean(t)
Ergebnis <- data.frame(h, l)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,6,1)))
kategoriell(y)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- data.frame(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
## (c) Eine Funktion, die geeignete deskriptive bivariate Statistiken fuer
## den Zusammenhang zwischen zwei kategorialen Variablen
## berechnet ausgibt
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
t <- table(x) ##Erstellung einer Tabelle der absoluten Haeufigkeiten
h <- prop.table(t) ##Erstellung einer Tabelle der relaiven Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
Ergebnis <- h
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
#h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
## (c) Eine Funktion, die geeignete deskriptive bivariate Statistiken fuer
## den Zusammenhang zwischen zwei kategorialen Variablen
## berechnet ausgibt
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(H) ##Tafel fuer die relativen Haeufigkeiten
#h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(H) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(H) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(H) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(H) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(H) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- H # cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(H) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- h # cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(x) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- h # cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(x) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(x) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
Ergebnis <- cbind(H, h) ## relative & absolute Haeufigkeiten in einem Frame
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
kategoriell <- function(x){ ## Funktion fuer kategorielle Variablen
H <- table(x) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- H/length(x) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
Ergebnis <- cbind("abs. Haeufigk." = H, "rel. Haeufigk." = h) ## relative & absolute Haeufigkeiten in einem Frame
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
y <- c(rep(c("eins", "zwei", "drei", "vier"), c(1,2,4,1)))
kategoriell(y)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prob.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- H #cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- H #cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- h #cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- cumsum(h)
Ergebnis <- hkum #cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
den Zusammenhang zwischen zwei kategorialen Variablen
## berechnet ausgibt
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- margin.table(h)
Ergebnis <-  #cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- margin.table(h)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- margin.table(H)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- rowsum(h)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- rowSums(h)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- colSums(h)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- rowSums(h)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
hkum <- rowSums(H)
Ergebnis <- cbind(H, h, hkum)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
Hkum <- rowSums(H) ## Randsumme für absolute Haeufigkeiten
Ergebnis <- cbind("abs. Haeufigk." = H, "RowSum" = Hkum, "rel. Haeufigk." = h)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
HRow <- rowSums(H) ## Randsumme für absolute Haeufigkeiten (Zeile)
HCol <- colSums(H) ## Randsumme für absolute Haeufigkeiten (Spalte)
Ergebnis <- cbind("abs. Haeufigk." = H, "RowSum" = HRow, "ColSum" = HCol, "rel. Haeufigk." = h)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
HRow <- rowSums(H) ## Randsumme für absolute Haeufigkeiten (Zeile)
Ergebnis <- cbind("abs. Haeufigk." = H, "RowSum" = HRow, "rel. Haeufigk." = h)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
H[nrow(H) + 1,] = colSums(H)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
HRow <- rowSums(H) ## Randsumme für absolute Haeufigkeiten (Zeile)
Ergebnis <- cbind("abs. Haeufigk." = H, "RowSum" = HRow, "rel. Haeufigk." = h)
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
bi.kategoriell <- function(x, y){ ## Funktion fuer zwei kategorielle Variablen
H <- table(x, y) ##Erzeugung von KOntingenztafel (absolute Haeufigkeiten)
h <- prop.table(H, 1) ##Tafel fuer die relativen Haeufigkeiten
h <- round(h, digits = 4) ##Rundung der relativen Haeufigkeiten auf 4 Nachkommastellen
HRow <- rowSums(H) ## Randsumme für absolute Haeufigkeiten (Zeile)
Ergebnis <- cbind("abs. Haeufigk." = H, "RowSum" = HRow, "rel. Haeufigk." = h)
## Gebe die errechneten Werte aus
return(Ergebnis)
}
## Beispiel zum Ausprobieren:
z <- c(rep(c("male", "female", "nb"), c(2,3,3)))
bi.kategoriell(y, z)
metrisch.dichotom <- function(x, y){ ## Funktion fuer eine merische und eine dichotome Variable
## x dichotom, y numerisch
if(length(x) != length(y))
return("Die Variablen muessen gleicher Laenge sein")
if(!is.numeric(x))
x <- as.numeric(factor(x))
e <- cor.test(x,y)    ## berechnet Punktbiseriale Korrelation
Ergebnis <- e
## Gebe die errechneten Werte aus
return(Ergebnis) ## letzten Abstand noch korrigieren!
}
## Beispiel zum Ausprobieren:
m <- c(1,3,2,4,2,7,12,0)
l <- c(rep(c("male", "female"), 4))
metrisch.dichotom(l, m)
#
visualisierung <- function(data) { ## Funktion zum Visualisieren und Zeichnen von Diagrammen
library(ggplot2) ## HinzufÃ¼gen einer Bibliothek zum Zeichnen eines Diagramms
ggplot(data, aes(x=reorder(cat1, cat1, function(x)-length(x)))) + geom_bar(fill='red') +  labs(x='cat1') ## Verwendung von ggplot, um ein Diagramm nach Kategorie mit roter Farbe und dem Titel "cat1" zu zeichnen
}
## Beispiele zum Ausprobieren:
data <- data.frame(cat1 = c("eins", "zwei", "drei", "vier","eins","funf","eins", "funf"))
visualisierung(data)
